/*
1. Объясните почему код даёт именно такие результаты?
Подсказка. Чтобы лучше разобраться возьмите этот код и запустите в отладчике в
браузере со включенными точками остановки.
 */

//пример 1
// Сначала инициализируются переменные
let a = 1, b = 1, c, d;
// Значение a увеличивается через префиксную форму инкремента (возвращается новое значение) (1 + 1 = 2) и присваивается в переменную c
c = ++a;
console.log(c); // ответ: 2

//пример 2
// Значение b увеличивается через постфиксную форму инкремента (возвращается старое значение) и присваивается в переменную d
d = b++;
console.log(d); //ответ: 1

//пример 3
// Значение a увеличивается через префиксную форму инкремента (2 + (2 + 1) = 5)
c = 2 + ++a;
console.log(c); //ответ: 5

//пример 4
// Значение b увеличивается через постфиксную форму инкремента (2 + 2 = 4) (Через постфиксную форму само значение увеличивается, но возвращается старое)
d = 2 + b++;
console.log(d); //ответ: 4
// Сами значения всегда увеличиваются на единицу, но возвращаемое значение зависит от формы инкремента
console.log(a); //3
console.log(b); //3

/*
2. Чему будут равны переменные x и a в примере ниже? Написать почему так произошло
(описать последовательность действий).
let a = 2;
let x = 1 + (a *= 2);
 */
// Инициализируем переменную a2 значением
let a2 = 2;
// Х определяем как 1 + (a2 = a2 * 2 = 4))
let x = 1 + (a2 *= 2);
// x = 5
console.log(x);

/*
3. Объявить две переменные a и b и задать им целочисленные произвольные начальные значения.
Затем написать скрипт, который работает по следующему принципу:
- если a и b положительные, вывести их разность (ноль можно считать положительным числом);
- если а и b отрицательные, вывести их произведение;
- * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму;
*/

let a3 = 2;
let b3 = 3;
if (a3 > 0 && b3 > 0) {
  console.log(a3 - b3);
} else if (a3 < 0 && b3 < 0) {
  console.log(a3 * b3);
} else {
  console.log(a3 + b3);
}

/*
4. Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с
двумя параметрами. Т.е. например, функция для сложения должна принимать два числа,
складывать их и возвращать результат. Обязательно использовать оператор return.
 */

const sum = (a, b) => a + b;
const sub = (a, b) => a - b;
const mult = (a, b) => a * b;
const div = (a, b) => a / b;

console.log(sum(2, 2));
console.log(sub(2, 2));
console.log(mult(2, 2));
console.log(div(2, 2));

/*
5. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от
переданного значения операции (использовать switch) выполнить одну из арифметических операций
(использовать функции из задания 4) и вернуть полученное значение.
 */

const mathOperation = (a, b, operation) => {
  switch (operation) {
    case '+':
      return sum(a, b);
    case '-':
      return sub(a, b);
    case '*':
      return mult(a, b);
    case '/':
      return div(a, b);
  }
};

console.log(mathOperation(2, 2, '+'));
console.log(mathOperation(2, 2, '-'));
console.log(mathOperation(2, 2, '*'));
console.log(mathOperation(2, 2, '/'));

/*
6. (Это задание не является частью курса, можете его не делать, оно для тех кому мало
обычных заданий, требует времени и возможно гугления, делайте по желанию.)

Программа должна спросить у пользователя число, это будет количество денег, которое
он хочет положить на счет в банке. Затем программа должна выдать примерно такое сообщение:
"Ваша сумма в 101 рубль успешно зачислена." - в случае если пользователь ввел 101.
"Ваша сумма в 10020 рублей успешно зачислена." - в случае если пользователь ввел 10020.
"Ваша сумма в 120104 рубля успешно зачислена." - в случае если пользователь ввел 120104.
То есть ваша задача выводить слово «рубль» в правильном падеже, в зависимости от введенного числа.
 */

const bankAccount = prompt('Сколько денег вы хотите положить на счет?');
alert(`Ваша сумма в ${bankAccount} ${bankAccount % 10 === 1 && bankAccount % 100 !== 11 ? 'рубль' : 'рублей'} успешно зачислена.`);
